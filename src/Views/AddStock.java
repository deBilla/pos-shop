/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import pos.Cart;
import pos.DatabasePOS;
import pos.ProductAmount;
import pos.NewItem;

/**
 *
 * @author Dimuthu
 */
public class AddStock extends javax.swing.JFrame {

    /**
     * Creates new form AddStock
     */
    private int user_id;
    private List<Cart> transactionItem = new ArrayList<>(); //this list will store all items to be used in this sale
    
    public AddStock() {
        initComponents();
    }
    
    public AddStock(int user_id) {
        this.user_id = user_id;
        initComponents();
    }
    
    public void checkout(){
        float total = 0;
        Iterator<Cart> iter = transactionItem.iterator();
        DatabasePOS db = new DatabasePOS();
        int id = db.getLastID("stock_add");
        id = id + 1;
        while (iter.hasNext()) {
            Cart str = iter.next();
            total = total + str.amount*str.sell_price;
            db.stockDB(id, str.ID, str.amount, user_id, str.buy_price, str.sell_price);
        }
        System.out.println(Float.toString(total));
        new Checkout(total).setVisible(true);
    } 
    
    public void refresh(){
        transactionItem.clear();
        display.setText(null);
        total_text.setText(null);
        item.setText(null);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        display = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        total_text = new javax.swing.JTextField();
        item = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        display.setColumns(20);
        display.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        display.setRows(5);
        display.setFocusable(false);
        jScrollPane1.setViewportView(display);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Total");

        total_text.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        total_text.setFocusable(false);

        item.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(total_text, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 739, Short.MAX_VALUE)
                        .addGap(41, 41, 41)
                        .addComponent(item, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(item, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(total_text, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemKeyPressed
        // TODO add your handling code here:
        int a = evt.getKeyCode();
        if(a==10){
            String name = item.getText();
            try{
            DatabasePOS db = new DatabasePOS();
            ResultSet rs = db.findAll("inventory");
            while(rs.next()){
                if (rs.getString(6).equals(name)) {
                    name = rs.getString(2);
                    String id = rs.getString(6);
                    float buy_price = rs.getFloat(4);
                    float sell_price = rs.getFloat(5);
                    new ProductAmount(transactionItem, display, total_text,id, name, buy_price, sell_price).setVisible(true);
                    item.setText("");
                    //display.setText(rs.getString(2));
                } else {
                }
            }
            }catch(Exception e){
                System.out.println(e);
            }
            
        }
        if(a==107){
            new NewItem(user_id, display, item, transactionItem).setVisible(true);
        }
        //when minus in th numpad is pressed
        if(a==109){
            String name = item.getText();
            try{
            DatabasePOS db = new DatabasePOS();
            ResultSet rs = db.findAll("inventory");
            while(rs.next()){
                if (rs.getString(6).equals(name)) {
                    name = rs.getString(2);
                    String id = item.getText();
                    //following for loop wasn't use because it gave ConcurrentModification exception
                    //                    for (Cart temp: transactionItem)
                    //                    {
                    //                        if (temp.ID == id){
                    //                            transactionItem.remove(temp);
                    //                        }
                    //                    }
                    //as a remedy an iterator was used
                    Iterator<Cart> iter = transactionItem.iterator();
                    while (iter.hasNext()) {
                        Cart str = iter.next();
                        if (str.ID.equals(id))
                            iter.remove();
                    }
                    total_text.setText(null);
                    float total = 0;
                    display.setText(null);
                    for (Cart temp: transactionItem)
                    {
                        String itemString = temp.name+"\t"+temp.amount+"\t"+String.format("%.2f", temp.amount*temp.sell_price)+"\n";
                        display.append(itemString);
                        total = total+temp.amount*temp.sell_price;
                    }
                    
                    total_text.setText(Float.toString(total));
                } else {
                }
            }
            }catch(Exception e){
                System.out.println(e);
            }
            item.setText("");
        }
        //if * numpad is pressed checkout happen
        if(a==106){
            checkout();
            refresh();
        }
    }//GEN-LAST:event_itemKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddStock().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea display;
    private javax.swing.JTextField item;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField total_text;
    // End of variables declaration//GEN-END:variables
}
