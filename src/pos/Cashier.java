/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pos;

import java.awt.Color;
import java.sql.ResultSet;
import java.util.Iterator;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import Views.Checkout;
import Reports.Sales;
import Reports.Inventory;
import Views.Users;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import Printer.PrintPOS;

/**
 *
 * @author Dimuthu
 */
public class Cashier extends javax.swing.JFrame {
    
    private String name, id;
    private int user_id; 
    private List<Cart> transactionItem = new ArrayList<>(); //this list will store all items to be used in this sale
    /**
     * Creates new form Cashier
     */
    public Cashier() {
        initComponents(); 
    }
    
    public Cashier(int user_id) {
        this.user_id = user_id;
        initComponents(); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        item_code_text = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        display = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        total_text = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        sales_button = new javax.swing.JButton();
        inventory_button = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        item_code_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                item_code_textKeyPressed(evt);
            }
        });

        display.setColumns(20);
        display.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        display.setRows(5);
        display.setFocusable(false);
        jScrollPane1.setViewportView(display);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("Total");
        jLabel1.setToolTipText("");

        total_text.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        total_text.setFocusable(false);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel2.setText("CredPOS");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/logo.png"))); // NOI18N

        sales_button.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        sales_button.setText("Sales");
        sales_button.setFocusable(false);
        sales_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sales_buttonMouseClicked(evt);
            }
        });

        inventory_button.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        inventory_button.setText("Inventory");
        inventory_button.setFocusable(false);
        inventory_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inventory_buttonMouseClicked(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setText("Users");
        jButton1.setFocusable(false);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(sales_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inventory_button, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)
                                .addComponent(total_text, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(item_code_text, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(item_code_text, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(sales_button, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(inventory_button, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 268, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jScrollPane1)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(total_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void item_code_textKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_item_code_textKeyPressed
        // TODO add your handling code here:
        int a = evt.getKeyCode();
        if(a==10){
            name = item_code_text.getText();
            try{
            DatabasePOS db = new DatabasePOS();
            ResultSet rs = db.findAll("inventory");
            while(rs.next()){
                if (rs.getString(6).equals(name)) {
                    name = rs.getString(2);
                    id = rs.getString(6);
                    float buy_price = rs.getFloat(4);
                    float sell_price = rs.getFloat(5);
                    java.awt.EventQueue.invokeLater(new Runnable() {
                        public void run() {
                            new ProductAmount(transactionItem, display, total_text,id, name, buy_price, sell_price).setVisible(true);
                        }
                    });  
                    item_code_text.setText("");
                    //display.setText(rs.getString(2));
                } else {
                }
            }
            }catch(Exception e){
                System.out.println(e);
            }
            
        }
        if(a==107){
            new NewItem(user_id, display, item_code_text, transactionItem).setVisible(true);
        }
        //when minus in th numpad is pressed
        if(a==109){
            name = item_code_text.getText();
            try{
            DatabasePOS db = new DatabasePOS();
            ResultSet rs = db.findAll("inventory");
            while(rs.next()){
                if (rs.getString(6).equals(name)) {
                    name = rs.getString(2);
                    String id = item_code_text.getText();
                    //following for loop wasn't use because it gave ConcurrentModification exception
                    //                    for (Cart temp: transactionItem)
                    //                    {
                    //                        if (temp.ID == id){
                    //                            transactionItem.remove(temp);
                    //                        }
                    //                    }
                    //as a remedy an iterator was used
                    Iterator<Cart> iter = transactionItem.iterator();
                    while (iter.hasNext()) {
                        Cart str = iter.next();
                        if (str.ID.equals(id))
                            iter.remove();
                    }
                    total_text.setText(null);
                    float total = 0;
                    display.setText(null);
                    for (Cart temp: transactionItem)
                    {
                        String itemString = temp.name+"\t"+temp.amount+"\t"+String.format("%.2f", temp.amount*temp.sell_price)+"\n";
                        display.append(itemString);
                        total = total+temp.amount*temp.sell_price;
                    }
                    total_text.setText(Float.toString(total));
                } else {
                }
            }
            }catch(Exception e){
                System.out.println(e);
            }
            item_code_text.setText(null);
        }
        //if * numpad is pressed checkout happen
        if(a==106){
            checkout();
            refresh();
        }
    }//GEN-LAST:event_item_code_textKeyPressed

    private void inventory_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inventory_buttonMouseClicked
        // TODO add your handling code here:
        new Inventory(user_id).setVisible(true);
    }//GEN-LAST:event_inventory_buttonMouseClicked

    private void sales_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sales_buttonMouseClicked
        // TODO add your handling code here:
        new Sales().setVisible(true);
    }//GEN-LAST:event_sales_buttonMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        new Users().setVisible(true);
    }//GEN-LAST:event_jButton1MouseClicked
    
    public void checkout(){
        float total = 0;
        Iterator<Cart> iter = transactionItem.iterator();
        DatabasePOS db = new DatabasePOS();
        int id = db.getLastID("sales");
        id = id + 1;
        String ticket = "Name\t Amount\t Sub Total\n";
        while (iter.hasNext()) {
            Cart str = iter.next();
            total = total + str.amount*str.sell_price;
            ticket = ticket.concat(str.name+"\t"+str.amount+"\t"+String.format("%.2f", str.amount*str.sell_price)+"\n");
            db.saleDB(id, str.ID, str.amount, user_id, str.buy_price, str.sell_price);
        }
        System.out.println(Float.toString(total));
        String t = Float.toString(total);
        ticket = ticket.concat(t);
        printTicket(ticket);
        new Checkout(total).setVisible(true);
    } 
    
    public void printTicket(String ticket){
        PrintPOS printpos = new PrintPOS();
        printpos.printToPOS(ticket);
    }
    
    public void refresh(){
        transactionItem.clear();
        display.setText(null);
        total_text.setText(null);
        item_code_text.setText(null);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cashier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cashier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cashier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cashier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cashier().setVisible(true);
            }
        });
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea display;
    private javax.swing.JButton inventory_button;
    private javax.swing.JTextField item_code_text;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton sales_button;
    private javax.swing.JTextField total_text;
    // End of variables declaration//GEN-END:variables
}
